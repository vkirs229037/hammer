NOP - No-op. Ничего не делаем

PUSH - Push. Загрузка значения в стек. Предполагается, что в байт-коде следующим значением будет являться индекс константы в constant pool (2 байта)
ADD - Add. Добавление 2-х значений со стека
SUB - Subtract. Вычитание
MUL - Multiply. Умножение
DIV - Divide. Деление

Все команды сравнения помещают на стек 1, если сравнение выполняется, иначе 0.
EQ - Equal. Равенство
NEQ - Not equal. Неравенство
GR - Greater. Больше
LS - Less. Меньше
GE - Greater (or) equal. Больше или равно
LE - Less (or) equal. Меньше или равно

Для всех команд перехода предполагается, что в байт-коде следующим значением будет являться offset (2 байта). 
JMP - Jump. Безусловный переход
JF - Jump (if) false. Переход, если на стеке значение false (пока что 0).
JBACK - Jump back. Переход назад. 
RET - Return. Возврат из функции

BIN - BuiltIN. Вызов встроенной функции. В байткоде следующим значением должен являться номер функции (2 байта).
Номера функций:
- println: 0x0000
- abs: 0x0001

LIV - Load Into Variable. Загрузка значения в переменную. 
Следующим значением в байткоде должны быть номер переменной (4 байта), на стеке должно также находиться 
значение для загрузки
LFV - Load From Variable. Загрузка значения из переменной.
Следующее значение - номер переменной (4 байта)

Уточнение: При компиляции каждой переменной дается номер, который далее и используется в программе. 
Т.е. каждое применение переменной компилируется в LFV <номер> или LIV <значение> <номер>
Номер переменной ограничен числом 4294967295 (2^32 - 1). 

DBG - Debug. Печатает в консоль текущее значение в стеке
HLT - Halt. Прекращает работу программы